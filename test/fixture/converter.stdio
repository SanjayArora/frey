Installing remarshal..
Converting '{root}/test/scenario/converter/infra.tf' to '{root}/test/scenario/converter/infra.tf.json'
Writing '{root}/test/scenario/converter/infra.unformatted.toml'
Appending '{root}/test/scenario/converter/infra.unformatted.toml'
Appending '{root}/test/scenario/converter/infra.unformatted.toml'
Formatting '{root}/test/scenario/converter/infra.unformatted.toml' to '{root}/test/scenario/converter/infra.toml'
Archiving intermediate '{root}/test/scenario/converter/infra.unformatted.toml' for debugging
Reading '{root}/test/scenario/converter/infra.toml'
[infra.output.public_address]
  value = "${aws_instance.infra-tusd-server.0.public_dns}"
[infra.output.public_addresses]
  value = "${join(\"\n\", aws_instance.infra-tusd-server.*.public_dns)}"
[infra.provider.aws]
  access_key = "${var.TSD_AWS_ACCESS_KEY}"
  region = "us-east-1"
  secret_key = "${var.TSD_AWS_SECRET_KEY}"
[infra.resource.aws_instance.infra-tusd-server]
  ami = "${lookup(var.ami, var.region)}"
  instance_type = "c3.large"
  key_name = "${var.TSD_SSH_KEY_NAME}"
  security_groups = ["fw-infra-tusd-main"]
  [infra.resource.aws_instance.infra-tusd-server.connection]
    key_file = "${var.TSD_SSH_KEY_FILE}"
    user = "ubuntu"
  [infra.resource.aws_instance.infra-tusd-server.tags]
    Name = "${var.TSD_DOMAIN}"
[infra.resource.aws_route53_record.www]
  name = "${var.TSD_DOMAIN}"
  records = ["${aws_instance.infra-tusd-server.public_dns}"]
  ttl = "300"
  type = "CNAME"
  zone_id = "${var.TSD_AWS_ZONE_ID}"
[infra.resource.aws_security_group.fw-infra-tusd-main]
  description = "Infra tusd"
  name = "fw-infra-tusd-main"
  [infra.resource.aws_security_group.fw-infra-tusd-main.ingress]
    cidr_blocks = ["${var.ip_all}"]
    from_port = 8080
    protocol = "tcp"
    to_port = 8080
[infra.variable.TSD_AWS_ACCESS_KEY]
  description = "TSD_AWS_ACCESS_KEY"
[infra.variable.TSD_AWS_SECRET_KEY]
  description = "TSD_AWS_SECRET_KEY"
[infra.variable.TSD_AWS_ZONE_ID]
  description = "TSD_AWS_ZONE_ID"
[infra.variable.TSD_DOMAIN]
  description = "TSD_DOMAIN"
[infra.variable.TSD_SSH_KEY_FILE]
  description = "TSD_SSH_KEY_FILE"
[infra.variable.TSD_SSH_KEY_NAME]
  description = "TSD_SSH_KEY_NAME"
[infra.variable.TSD_SSH_USER]
  description = "TSD_SSH_USER"
[infra.variable.ami.default]
  us-east-1 = "ami-9bce7af0"
[infra.variable.ip_all]
  default = "0.0.0.0/0"
  description = "ip_all"
[infra.variable.ip_kevin]
  default = "62.163.187.106/32"
  description = "ip_kevin"
[infra.variable.ip_marius]
  default = "84.146.5.70/32"
  description = "ip_marius"
[infra.variable.ip_tim]
  default = "24.134.75.132/32"
  description = "ip_tim"
[infra.variable.region]
  default = "us-east-1"
  description = "The region of AWS, for AMI lookups."


[global.ansiblecfg.defaults]

[global.ansiblecfg.ssh_connection]
ssh_args = "-o ControlMaster=auto -o ControlPersist=60s"

[[install.playbooks]]
  hosts = "infra-tusd-server"
  name = "Install infra-tusd-server"

  [[install.playbooks.tasks]]
    action = "template src=templates/sources.list dest=/etc/apt/sources.list"
    name = "Common | Add US APT Mirrors"
    register = "apt_sources"

  [[install.playbooks.tasks]]
    apt = "upgrade=dist cache_valid_time=3600 update_cache=yes dpkg_options='force-confold,force-confdef'"
    name = "Common | Update APT"
    when = "apt_sources|changed"

  [[install.playbooks.tasks]]
    apt = "pkg={{ item }} state=present"
    name = "Common | Install Packages"
    with_items = ["apg", "build-essential", "curl", "git-core", "htop", "iotop", "libpcre3", "logtail", "mlocate", "mtr", "mysql-client", "psmisc", "telnet", "vim", "wget"]

  [[install.playbooks.tasks]]
    action = "lineinfile dest=/home/ubuntu/.bashrc line=\"alias wtf='sudo tail -f /var/log/*{log,err} /var/log/{dmesg,messages,*{,/*}{log,err}}'\""
    name = "Common | Add convenience shortcut wtf"

  [[install.playbooks.tasks]]
    file = "path=/srv/tusd/current state=directory owner=www-data group=www-data mode=0755 recurse=yes"
    name = "tusd | Create approot"

  [[install.playbooks.tasks]]
    action = "copy src=templates/tusd dest=/srv/tusd/current/tusd mode=0755"
    name = "tusd | Download binary"

  [[install.playbooks.tasks]]
    file = "path=/mnt/tusd-data state=directory owner=www-data group=www-data mode=0755 recurse=yes"
    name = "tusd | Create dataroot"

  [[install.playbooks.tasks]]
    action = "template src=templates/env dest=/srv/tusd/current/env.sh mode=0600 owner=root group=root"
    name = "tusd | Upload environment"

  [[install.playbooks.tasks]]
    action = "template src=templates/upstart-tusd dest=/etc/init/tusd.conf"
    name = "tusd | Install upstart file"

  [[install.playbooks.tasks]]
    action = "service name=tusd state=restarted"
    name = "tusd | Restart"



Archiving original '{root}/test/scenario/converter/infra.tf' for safety
Archiving intermediate '{root}/test/scenario/converter/infra.tf.json' for debugging
